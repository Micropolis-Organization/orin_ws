<launch>

    <arg name="cloud_in"            default="/cloud"/>
    <!-- <arg name="cloud_in"            default="/m2d/lidar/point_cloud"/> -->
    <arg name="scan"                default="/scan"/>
    <arg name="target_frame"        default="laser"/>
    <arg name="range_max"           default="20.0"/>
    <arg name="angle_min"           default="-1.571"/>
    <arg name="angle_max"           default="1.571"/>
    <arg name="angle_increment"     default="0.001"/>
    <arg name="min_height"          default="-0.750"/>
    <arg name="max_height"          default="2.0"/>
    <arg name="range_min"           default="0"/>
    <arg name="use_inf"             default="false"/>
    <arg name="concurrency_level"   default="1"/>
    <!-- <node pkg="tf" type="static_transform_publisher" name="lidar_tf_pub" output="screen"
    args="0 0 0 0 0 0 lidar laser 100" /> -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="laser_to_baselink" args="0 0 0 0 0 0 1 lidar laser" />

    <node pkg="pointcloud_to_laserscan" name="pcd_to_scan" type="pointcloud_to_laserscan_node" output="screen" >

        <remap from="cloud_in"  to="$(arg cloud_in)"/>
        <remap from="scan"      to="$(arg scan)"/>
        
        <param name="target_frame"      value="$(arg target_frame)"/>
        <param name="range_max"         value="$(arg range_max)"/>
        <param name="angle_min"         value="$(arg angle_min)"/>
        <param name="angle_max"         value="$(arg angle_max)"/>
        <param name="angle_increment"   value="$(arg angle_increment)"/>
        <param name="min_height"        value="$(arg min_height)"/>
        <param name="max_height"        value="$(arg max_height)"/>
        <param name="range_min"         value="$(arg range_min)"/>
        <param name="use_inf"           value="$(arg use_inf)"/>
        <param name="concurrency_level" value="$(arg concurrency_level)"/>
        <!-- <arg name="subscribe_scan"         value="true" /> -->
        <!-- <arg name="scan_topic"             value="/scan" /> -->
    </node>

</launch>